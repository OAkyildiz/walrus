<!-- Bringup file for the robot -->
<launch>
  <arg name="have_boom" default="false"/>
  <arg name="have_oryx_arm" default="false"/>
  <arg name="payload" value="boom"/>
  <arg name="kinect_devname" value="kinect"/>
  <arg name="base_name" value="kinect2"/>
  <arg name="base_cameras_en" value="true"/>
  
  <include file="$(find walrus_base_hw)/launch/walrus_base_hw.launch" />

  <node name="$(arg payload)" pkg="walrus_boomboard_driver" type="walrus_boomboard_node" respawn="true" respawn_delay="5" if="$(arg have_boom)">
  	<remap from="$(arg payload)/joint_states" to="joint_states" />
  	<param name="controller_rate" value="50.0" type="double" />
  	<rosparam command="load" file="$(find walrus_boomboard_driver)/config/boomboard_param.yaml" />
  </node>

  <!-- Kinect if="$(arg have_boom)"-->
  
  <!--	<remap from="$(arg base_name)/depth_rect/camera_info" to="$(arg payload)/$(arg kinect_devname)/depth_rect/camera_info" />
  <remap from="$(arg base_name)/depth_rect/image" to="$(arg payload)/$(arg kinect_devname)/depth_rect/image" />
  <remap from="$(arg base_name)/depth_rect/image_rect/compressedDepth" to="$(arg payload)/$(arg kinect_devname)/depth_rect/image"/>
  
  <remap from="$(arg base_name)/ir_rect/camera_info" to="$(arg payload)/$(arg kinect_devname)/ir_rect/camera_info" />
  <remap from="$(arg base_name)/ir_rect/image" to="$(arg payload)/$(arg kinect_devname)/ir_rect/image" />
  <remap from="$(arg base_name)/ir_rect/image/compressed" to="$(arg payload)/$(arg kinect_devname)/ir_rect/image/compressed"/>
  <remap from="/$(arg base_name)" to="/$(arg payload)/$(arg kinect_devname)" /> -->
  <include file="$(find kinect2_bridge)/launch/kinect2_bridge.launch" if="$(arg have_boom)">
  	<arg name="base_name" value="$(arg base_name)"/>
  </include>
  
  

  <!-- IMU -->
  <node name="orientus_node" pkg="orientus_driver" type="orientus_node" respawn="true" respawn_delay="5">
    <param name="port" value="/dev/walrus_imu"/>
  </node>
  

  <!--Cameras-->
  <node pkg="multi_usb_cam" type="multi_usb_cam_node" name="multi_usb_cam_node" respawn="true" respawn_delay="5" if="$(arg base_cameras_en)">
    <rosparam>
      cameras:
        - {name: '/dev/front_camera', topic: 'front_camera/image_raw', frame_id: 'front_camera'}
        <!--	- {name: '/dev/back_camera', topic: 'back_camera/image_raw', frame_id: 'back_camera'}-->
        - {name: '/dev/bottom_camera', topic: 'bottom_camera/image_raw', frame_id: 'bottom_camera'}
      configs: # Each level of configuration is for number of cameras running concurrently (first is for one camera, second is for two, etc)
        - {width: 1280, height: 720, fps: 30}
        - {width: 320, height: 240, fps: 10}
    </rosparam>
  </node>

  <include file="$(find walrus_bringup)/launch/includes/computer_monitor.launch.xml">
    <arg name="name" value="primary_computer"/>
  </include>

  <node name="robot_bullet_monitor" pkg="ubiquiti_bullet" type="bullet_monitor.py" respawn="true" respawn_delay="5">
    <param name="use_https" value="false"/>
    <param name="ip_address" value="192.168.1.20"/>
  </node>
  <node name="remote_bullet_monitor" pkg="ubiquiti_bullet" type="bullet_monitor.py" respawn="true" respawn_delay="5">
    <param name="use_https" value="false"/>
    <param name="ip_address" value="192.168.1.21"/>
  </node>

<!-- Pod init -->
  <!-- <node name="pod_serial_init" pkg="walrus_pod_controller"
    cmd="pod-serial-init.sh">
  </node>-->

  <include file="$(find walrus_bringup)/launch/includes/common.launch.xml">
    <arg name="have_boom" default="$(arg have_boom)" />
    <!--<arg name="have_boom" default="true" />-->
    <arg name="have_oryx_arm" default="$(arg have_oryx_arm)" />
    <arg name="type" value="robot"/>
  </include>
</launch>
