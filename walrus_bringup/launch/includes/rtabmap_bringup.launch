<launch>

  
  <!-- Mode selecotrs-->
  <arg name="local_viz" 	default="false" /> <!-- Map: local  Viz: local	#Nothing is sent-->
  <arg name="remote_viz" 	default="false" /> <!-- Map: local	Viz: remote #MapData is sent-->
  <arg name="remote_map"	default="false" /> <!-- Map: remote Viz: remote #Images are sent-->
  
  <!-- Choose visualization (For local mapping)	 -->
  <arg name="rviz" 				default="true" />
  <arg name="rtabmapviz" 		default="false" /> 
   
  <!-- Corresponding config files -->
  <arg name="cfg"              	default="~/.ros/rtabmap.ini" /> <!-- To change RTAB-Map's parameters, set the path of config file (*.ini) generated by the standalone app -->
  <arg name="rviz_cfg"          default="-d $(find rtabmap_ros)/launch/config/rgbd.rviz" /> <!-- Set a new .rviz file that includes robot model-->
  
  
  <!-- Base -->
  <!--arg name="base_tf" 			default="walrus"/--> <!-- obsolate-->
  <!--arg name="base" 				default="base_epos"/-->  <!-- obsolate-->
  <!--arg name="ctrl"				default="drive_controller"/--> <!-- obsolate-->
  
  <!-- Fixed frame id-->
  <arg name="ns" 					default="rtabmap" />
  <arg name="frame_id" 				default="walrus/base_footprint"/>
  <arg name="database_path"			default="~/.ros/rtabmap.db"/> <!-- this should change for remote map -->
  <arg name="queue_size"			default="10"/>
  <arg name="wait_for_transform" 	default="0.1"/>
  <arg name="rtabmap_args"			default=""/><!-- delete_db_on_start, udebug -->
  <arg name="launch_prefix"        	default=""/>  
  <arg name="visual_odometry"		value="false"/><!-- Launch rtabmap visual odometry node -->
  <arg name="odom" 					default="/base_epos/drive_controller/odom"/>
  
  

  <!-- Sensor -->
  <!-- Which image resolution to process in rtabmap: sd, qhd, hd -->
  <arg name="resolution" 		default="qhd" />
  <arg name="payload" 			default="boom"/> 
  <arg name="device" 			default="kinect"/>
  
  <!-- RGB-D topics -->
  <arg name="rgb_topic" 		default="/$(arg payload)/$(arg device)/$(arg resolution)/image_color_rect"/>
  <arg name="depth_topic" 		default="/$(arg payload)/$(arg device)/$(arg resolution)/image_depth_rect"/>
  <arg name="camera_info_topic" default="/$(arg payload)/$(arg device)/$(arg resolution)/camera_info"/>

  
  <arg if="$(arg  remote_map)" name="compressed"		default="true"/>
  <arg unless="$(arg  remote_map)" name="compressed"		default="false"/>
  
  <arg name="rgb_image_transport" 	default="compressed"/>    <!-- Common types: compressed, theora (see "rosrun image_transport list_transports") -->
   
  <arg name="subscribe_scan" 	value="false"/>
 
 <!--################################################################################-->
 
   <!-- Nodes -->
  <group ns="$(arg ns)">
  	<!--rtabmap-->
  
    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="screen" unless="$(arg remote_map)" args="--delete_db_on_start">
          <param name="frame_id" type="string" value="$(arg frame_id)"/>

          <param name="subscribe_depth" type="bool" value="true"/>

          <remap from="odom" to="$(arg odom)"/>

          <remap from="rgb/image" to="$(arg rgb_topic)"/>
          <remap from="depth/image" to="$(arg depth_topic)"/>
          <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>

          <param name="queue_size" type="int" value="10"/>

          <!-- RTAB-Map's parameters -->
          <param name="RGBD/AngularUpdate" type="string" value="0.01"/>
          <param name="RGBD/LinearUpdate" type="string" value="0.01"/>
          <param name="Rtabmap/TimeThr" type="string" value="700"/>
          <param name="Mem/RehearsalSimilarity" type="string" value="0.45"/>
          <param name="RGBD/OptimizeFromGraphEnd" type="string" value="true"/>
    </node>
  </group>
  
  <!--Visualization-->
  <include file="$(find walrus_bringup)/launch/includes/rtabmap/local_viz.launch.xml" if="$(arg local_viz)">
  	<arg name="device" 		value="$(arg kinect_devname)"/>
  	<arg name="payload" 	value="$(arg payload)"/> 
  </include>
  <include file="$(find walrus_bringup)/launch/includes/rtabmap/remote_viz.launch.xml" if="$(arg remote_viz)">
  	<arg name="device" 		value="$(arg kinect_devname)"/>
  	<arg name="payload" 	value="$(arg payload)"/> 
  </include>
  
</launch>
